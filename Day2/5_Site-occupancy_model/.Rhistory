gentiana <- read.csv("http://www.petrkeil.com/wp-content/uploads/2014/02/gentiana.csv")
gentiana <- gentiana[,-1]
# fitting classical LOGISTIC REGRESSION of presence-absence data
naive.m1 <- glm(pres.abs~humidity, data=gentiana, family="binomial")
# or the response can be number of successes out of 3 visits
succ.fail <- cbind(gentiana$pres.abs, 3-gentiana$pres.abs)
naive.m2 <- glm(succ.fail~humidity, data=gentiana, family="binomial")
# plotting the data and the predictions
plot(gentiana$humidity, gentiana$pres.abs,
xlab="Humidity index", ylab="Gentiana detections")
lines(gentiana$humidity, predict(naive.m1, type="response"))
lines(gentiana$humidity, predict(naive.m2, type="response"), lty=2)
# fitting classical LOGISTIC REGRESSION of presence-absence data
naive.m1 <- glm(pres.abs~humidity, data=gentiana, family="binomial")
# or the response can be number of successes out of 3 visits
succ.fail <- cbind(gentiana$pres.abs, 3-gentiana$pres.abs)
naive.m2 <- glm(succ.fail~humidity, data=gentiana, family="binomial")
# plotting the data and the predictions
plot(gentiana$humidity, gentiana$pres.abs,
xlab="Humidity index", ylab="Gentiana detections")
lines(gentiana$humidity, predict(naive.m1, type="response"))
#lines(gentiana$humidity, predict(naive.m2, type="response"), lty=2)
par(mfrow=c(1,2))
# fitting classical LOGISTIC REGRESSION of presence-absence data
naive.m1 <- glm(pres.abs~humidity, data=gentiana, family="binomial")
# or the response can be number of successes out of 3 visits
succ.fail <- cbind(gentiana$pres.abs, 3-gentiana$pres.abs)
naive.m2 <- glm(succ.fail~humidity, data=gentiana, family="binomial")
# plotting the data and the predictions
plot(gentiana$humidity, gentiana$pres.abs,
xlab="Humidity index", ylab="Gentiana detections")
lines(gentiana$humidity, predict(naive.m1, type="response"))
#lines(gentiana$humidity, predict(naive.m2, type="response"), lty=2)
# just make the 2D array as simple as possible
y <- as.matrix(gentiana[,2:4])
colnames(y) <- NULL
gentiana.data <- list(N.sites = nrow(y),
N.visit = ncol(y),
humidity = gentiana$humidity,
y = y)
library(R2jags)
cat("
model
{
# priors
alpha.occ ~ dnorm(0, 0.01)
beta.occ ~ dnorm(0, 0.01)
alpha.det ~ dnorm(0, 0.01)
beta.det ~ dnorm(0, 0.01)
# likelihood
for(i in 1:N.sites)
{
z[i] ~ dbern(psi[i]) # true occupancy at site i
logit(psi[i]) <- alpha.occ + beta.occ*humidity[i]
for(j in 1:N.visit)
{
logit(p[i,j]) <- alpha.det + beta.det*humidity[i] # detection probability
eff.p[i,j] <- z[i] * p[i, j] # p of observing the present individual
y[i,j] ~ dbern(eff.p[i,j]) # detection/non-detection at [i,j]
}
}
}
", file="gentiana.txt")
zst <- apply(X=y, MARGIN=1, FUN=max)
inits <- function(){list(z=zst, alpha.occ=rnorm(1),
beta.occ=rnorm(1),
alpha.det=rnorm(1),
beta.det=rnorm(1))}
model.fit <- jags(data=gentiana.data,
model.file="gentiana.txt",
parameters.to.save=c("psi"),
n.chains=1,
n.iter=2000,
n.burnin=1000,
inits=inits,
DIC=FALSE)
plot(gentiana$humidity, gentiana$pres.abs,
xlab="Humidity index", ylab="Gentiana detections")
lines(gentiana$humidity, model.fit$BUGSoutput$summary[,'50%'])
lines(gentiana$humidity, model.fit$BUGSoutput$summary[,'2.5%'], lty=2)
lines(gentiana$humidity, model.fit$BUGSoutput$summary[,'97.5%'], lty=2)
?jags
library(R2jags)
?jags
