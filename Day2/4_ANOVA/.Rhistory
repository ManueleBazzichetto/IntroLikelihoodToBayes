Bayesian resources
========================================================
author: Petr Keil
date: February 2014
Software
========================================================
**OpenBUGS** [www.openbugs.net](http://openbugs.net/w/FrontPage)
snakes <- read.csv("http://www.petrkeil.com/wp-content/uploads/2014/02/snakes.csv")
# we will artificially delete 9 data points in the first population
snakes <- snakes[-(1:9),]
summary(snakes)
par(mfrow=c(1,2))
plot(snout.vent ~ population, data=snakes,
ylab="Snout-vent length [cm]")
boxplot(snout.vent ~ population, data=snakes,
ylab="Snout-vent length [cm]",
xlab="population",
col="grey")
snake.data <- list(y=snakes$snout.vent,
x=snakes$population,
N=nrow(snakes),
N.pop=5)
library(R2jags)
cat("
model
{
# priors
sigma ~ dunif(0,100)
tau <- 1/(sigma*sigma)
for(j in 1:N.pop)
{
alpha[j] ~ dnorm(0, 0.001)
}
# likelihood
for(i in 1:N)
{
y[i] ~ dnorm(alpha[x[i]], tau)
}
}
", file="fixed_anova.txt")
model.fit.fix <- jags(data=snake.data,
model.file="fixed_anova.txt",
parameters.to.save=c("alpha"),
n.chains=3,
n.iter=2000,
n.burnin=1000,
DIC=FALSE)
plot(as.mcmc(model.fit.fix))
model.fit.fix
autocorr.plot(as.mcmc(model.fit.fix))
autocorr.plot(model.fit.fix)
?autocorr.plot
autocorr.plot(as.mcmc(model.fit.fix))
autocorr.plot(as.mcmc(model.fit.fix))
gelman.plot(as.mcmc(model.fit.fix))
cat("
model
{
# priors
grand.mean ~ dnorm(0, 0.001)
grand.sigma ~ dunif(0,100)
grand.tau <- 1/(grand.sigma*grand.sigma)
group.sigma ~ dunif(0, 100)
group.tau <- 1/(group.sigma*group.sigma)
for(j in 1:N.pop)
{
alpha[j] ~ dnorm(grand.mean, grand.tau)
}
# likelihood
for(i in 1:N)
{
y[i] ~ dnorm(alpha[x[i]], group.tau)
}
}
", file="random_anova.txt")
model.fit.rnd <- jags(data=snake.data,
model.file="random_anova.txt",
parameters.to.save=c("alpha"),
n.chains=3,
n.iter=2000,
n.burnin=1000,
DIC=FALSE)
plot(as.mcmc(model.fit.rnd))
model.fit.rnd
cat("
model
{
# priors
grand.mean ~ dnorm(0, 0.001)
grand.sigma ~ dunif(0,100)
grand.tau <- 1/(grand.sigma*grand.sigma)
group.sigma ~ dunif(0, 100)
group.tau <- 1/(group.sigma*group.sigma)
for(j in 1:N.pop)
{
alpha[j] ~ dnorm(grand.mean, grand.tau)
}
# likelihood
for(i in 1:N)
{
y[i] ~ dnorm(alpha[x[i]], group.tau)
}
between.vs.within <- grand.sigma - group.sigma
}
", file="random_anova.txt")
model.fit.rnd <- jags(data=snake.data,
model.file="random_anova.txt",
parameters.to.save=c("alpha", "between.vs.within"),
n.chains=3,
n.iter=2000,
n.burnin=1000,
DIC=FALSE)
plot(as.mcmc(model.fit.rnd))
model.fit.rnd
model.fit.rnd
library(mcmcplots)
caterplot(model.fit.fix)
?caterplot
library(mcmcplots)
caterplot(model.fit.fix, horizontal=FALSE)
library(mcmcplots)
caterplot(model.fit.fix, horizontal=FALSE, reorder=FALSE)
?caterplot
caterplot(model.fit.rnd, params="alpha", horizontal=FALSE, reorder=FALSE)
caterplot(model.fit.rnd, parms="alpha", horizontal=FALSE, reorder=FALSE)
mcmcplot(model.fit.rnd, parms="between.minus.within")
denplot(model.fit.rnd, parms="between.minus.within")
model.fit.rnd <- jags(data=snake.data,
model.file="random_anova.txt",
parameters.to.save=c("alpha", "between.minus.within"),
n.chains=3,
n.iter=2000,
n.burnin=1000,
DIC=FALSE)
cat("
model
{
# priors
grand.mean ~ dnorm(0, 0.001)
grand.sigma ~ dunif(0,100)
grand.tau <- 1/(grand.sigma*grand.sigma)
group.sigma ~ dunif(0, 100)
group.tau <- 1/(group.sigma*group.sigma)
for(j in 1:N.pop)
{
alpha[j] ~ dnorm(grand.mean, grand.tau)
}
# likelihood
for(i in 1:N)
{
y[i] ~ dnorm(alpha[x[i]], group.tau)
}
between.minus.within <- grand.sigma - group.sigma
}
", file="random_anova.txt")
model.fit.rnd <- jags(data=snake.data,
model.file="random_anova.txt",
parameters.to.save=c("alpha", "between.minus.within"),
n.chains=3,
n.iter=2000,
n.burnin=1000,
DIC=FALSE)
library(mcmcplots)
caterplot(model.fit.rnd, parms="alpha", horizontal=FALSE, reorder=FALSE)
denplot(model.fit.rnd, parms="between.vs.within")
caterplot(model.fit.rnd, parms="between.vs.within")
snakes <- read.csv("http://www.petrkeil.com/wp-content/uploads/2017/02/snakes_lengths.csv)
# we will artificially delete 9 data points in the first population
snakes <- snakes[-(1:9),]
summary(snakes)
snakes <- read.csv("http://www.petrkeil.com/wp-content/uploads/2017/02/snakes_lengths.csv")
snakes <- read.csv("http://www.petrkeil.com/wp-content/uploads/2017/02/snakes_lengths.csv")
summary(snakes)
snakes <- read.csv("http://www.petrkeil.com/wp-content/uploads/2017/02/snakes_lengths.csv")
summary(snakes)
snakes <- read.csv("https://github.com/petrkeil/ML_and_Bayes_2021_CZU/blob/main/09_ANOVA/snakes.csv")
summary(snakes)
snakes <- read.csv("https://raw.githubusercontent.com/petrkeil/ML_and_Bayes_2021_CZU/main/09_ANOVA/snakes.csv")
summary(snakes)
snakes <- read.csv("https://raw.githubusercontent.com/petrkeil/ML_and_Bayes_2021_CZU/main/09_ANOVA/snakes.csv")
install.packages("mcmcplots")
caterplot(model.fit.fix, parms="alpha", horizontal=FALSE, reorder=FALSE)
library(mcmcplots)
caterplot(model.fit.fix, parms="alpha", horizontal=FALSE, reorder=FALSE)
